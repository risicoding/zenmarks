generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bookmark {
  id          String        @id @default(cuid())
  userId      String // Clerk user ID
  title       String?
  url         String
  description String?
  image       String?
  folderId    String?
  folder      Folder?       @relation(fields: [folderId], references: [id], onDelete: SetNull)
  tags        BookmarkTag[]
  isFavorite  Boolean       @default(false)
  isArchived  Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([userId]) // Index for faster lookups by user
}

model Folder {
  id        String     @id @default(cuid())
  userId    String // Clerk user ID
  name      String
  bookmarks Bookmark[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([userId])
}

model Tag {
  id        String        @id @default(cuid())
  userId    String // Clerk user ID
  name      String
  bookmarks BookmarkTag[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@unique([userId, name]) // Ensure unique tags per user
}

model BookmarkTag {
  bookmarkId String
  tagId      String
  bookmark   Bookmark @relation(fields: [bookmarkId], references: [id], onDelete: Cascade)
  tag        Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([bookmarkId, tagId]) // Composite primary key
}
